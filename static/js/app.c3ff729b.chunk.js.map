{"version":3,"file":"static/js/app.c3ff729b.chunk.js","mappings":"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","sources":["D2App/utils/handlebarsHelpers.js","D2App/utils/exportMetadata.js","D2App/utils/igDownload.js","D2App/components/TrackerProgramSelector.js","webpack://@dhis2/app-shell/./src/D2App/components/IGConfigForm.module.css?e116","D2App/components/IGConfigForm.js","D2App/hooks/useTrackerPrograms.js","D2App/hooks/useTemplates.js","webpack://@dhis2/app-shell/./src/D2App/App.module.css?77cb","D2App/App.js"],"sourcesContent":["import Handlebars from \"handlebars\";\nexport const toPascalCase = str => {\n  return str.replace(/[^a-zA-Z0-9\\s.-]/g, \" \").trim().split(/[\\s_-]+/).map(word => {\n    if (word === word.toUpperCase()) {\n      return word;\n    } else {\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    }\n  }).filter(word => word).join(\"\");\n};\nexport const toKebabCase = str => {\n  return str.replace(/[^a-zA-Z0-9\\s.-]/g, \" \").trim().split(/\\s+/).map(word => word.toLowerCase()).filter(word => word).join(\"-\");\n};\nexport const toCamelCase = str => {\n  return str.replace(/[^a-zA-Z0-9\\s]/g, \" \").trim().split(/\\s+/).map((word, index) => {\n    if (index == 0) {\n      return word.toLowerCase();\n    } else {\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    }\n  }).join(\"\");\n};\n\n// TODO: codeSystem id and value set id mappings are equal?\n\nexport const toFhirDataElementName = dhis2Object => {\n  if (!dhis2Object.name) {\n    throw new Error(\"Element must have a name property.\");\n  }\n  const maxLength = 64;\n  const tryNames = [dhis2Object.formName, dhis2Object.displayName, dhis2Object.shortName, dhis2Object.name].filter(Boolean);\n  for (let name of tryNames) {\n    const camelCaseName = toCamelCase(name);\n    if (camelCaseName.length <= maxLength) {\n      return camelCaseName;\n    }\n  }\n  throw new Error(\"Both formName and shortName are too long to be a valid FHIR data element name.\");\n};\nexport const toFhirDataType = function (dhis2ValueType) {\n  let isOptionSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (isOptionSet) {\n    return \"code\";\n  }\n  switch (dhis2ValueType) {\n    case \"TEXT\":\n    case \"LONG_TEXT\":\n    case \"EMAIL\":\n    case \"PHONE_NUMBER\":\n      return \"string\";\n    case \"NUMBER\":\n      return \"decimal\";\n    case \"INTEGER\":\n      return \"integer\";\n    case \"INTEGER_POSITIVE\":\n      return \"positiveInt\";\n    case \"INTEGER_NEGATIVE\":\n      return \"integer\";\n    case \"INTEGER_ZERO_OR_POSITIVE\":\n      return \"unsignedInt\";\n    case \"PERCENTAGE\":\n      return \"decimal\";\n    case \"UNIT_INTERVAL\":\n      return \"decimal\";\n    case \"DATE\":\n      return \"date\";\n    case \"DATETIME\":\n      return \"dateTime\";\n    case \"TIME\":\n      return \"time\";\n    case \"BOOLEAN\":\n      return \"boolean\";\n    case \"TRUE_ONLY\":\n      return \"boolean\";\n    case \"URL\":\n      return \"url\";\n    case \"FILE_RESOURCE\":\n    case \"IMAGE\":\n      return \"Attachment\";\n    case \"AGE\":\n      return \"Age\";\n    default:\n      return \"string\";\n  }\n};\nexport const toFhirCardinality = isMandatory => {\n  return isMandatory ? \"1\" : \"0\";\n};\nexport const toFhirElementDescription = dhis2ProgramAttribute => {\n  if (dhis2ProgramAttribute.description) {\n    return dhis2ProgramAttribute.description;\n  } else {\n    return dhis2ProgramAttribute.name;\n  }\n};\nexport const isRepeatable = repeatable => {\n  return repeatable ? \"*\" : \"1\";\n};\nexport const registerHelpers = () => {\n  Handlebars.registerHelper(\"toPascalCase\", function (str) {\n    return toPascalCase(str);\n  });\n  Handlebars.registerHelper(\"toKebabCase\", function (str) {\n    return toKebabCase(str);\n  });\n  Handlebars.registerHelper(\"toCamelCase\", function (str) {\n    return toCamelCase(str);\n  });\n  Handlebars.registerHelper(\"toFhirDataType\", function (dhis2ValueType, isOptionSet) {\n    return toFhirDataType(dhis2ValueType, isOptionSet);\n  });\n  Handlebars.registerHelper(\"toFhirCardinality\", function (isMandatory) {\n    return toFhirCardinality(isMandatory);\n  });\n  Handlebars.registerHelper(\"toFhirElementDescription\", function (str) {\n    return toFhirElementDescription(str);\n  });\n  Handlebars.registerHelper(\"isRepeatable\", function (repeatable) {\n    return isRepeatable(repeatable);\n  });\n  Handlebars.registerHelper(\"toFhirDataElementName\", function (dhis2Object) {\n    return toFhirDataElementName(dhis2Object);\n  });\n};","import JSZipUtils from \"jszip-utils\";\nimport JSZip from \"jszip\";\nimport Handlebars from \"handlebars\";\nimport { toPascalCase, registerHelpers } from \"./handlebarsHelpers\";\nimport { handleDownload } from \"./igDownload\";\nimport YAML from \"yaml\";\nexport const exportMetadata = (trackerPrograms, templates, igConfig) => {\n  registerHelpers();\n  const igZipPath = `${process.env.PUBLIC_URL}/assets/ig.zip`;\n  JSZipUtils.getBinaryContent(igZipPath, function (err, templateIg) {\n    if (err) throw err;\n    JSZip.loadAsync(templateIg).then(function () {\n      const igArchive = new JSZip();\n      igArchive.loadAsync(templateIg).then(async function () {\n        await updateSushiConfigFile(igArchive, igConfig);\n        await updateIgIniFile(igArchive, igConfig.id);\n        trackerPrograms.forEach(program => {\n          generateFshFilesForProgram(program, templates, igArchive);\n        });\n      }).then(function () {\n        handleDownload(igArchive);\n      });\n    });\n  });\n};\nconst generateFshFilesForProgram = (program, templates, igArchive) => {\n  const {\n    programLogicalModelTemplate,\n    programStageLogicalModelTemplate,\n    codeSystemTemplate,\n    valueSetTemplate\n  } = templates;\n  const programFsh = generateFsh(program, programLogicalModelTemplate);\n  const logicalModelFileName = toPascalCase(program.name);\n  igArchive.file(`input/fsh/models/${logicalModelFileName}.fsh`, programFsh);\n  program.programTrackedEntityAttributes.forEach(attribute => {\n    var attr = attribute.trackedEntityAttribute;\n    if (attr.optionSet) {\n      const fhirFileName = toPascalCase(attr.optionSet.name);\n      const codeSystemFsh = generateFsh(attr.optionSet, codeSystemTemplate);\n      const valueSetFsh = generateFsh(attr.optionSet, valueSetTemplate);\n      igArchive.file(`input/fsh/codesystems/${fhirFileName}CS.fsh`, codeSystemFsh);\n      igArchive.file(`input/fsh/valuesets/${fhirFileName}VS.fsh`, valueSetFsh);\n    }\n  });\n  program.programStages.forEach(stage => {\n    const programStageFsh = generateFsh(stage, programStageLogicalModelTemplate);\n    const logicalModelFileName = toPascalCase(stage.name);\n    igArchive.file(`input/fsh/models/${logicalModelFileName}.fsh`, programStageFsh);\n    stage.programStageDataElements.forEach(_ref => {\n      let {\n        dataElement\n      } = _ref;\n      if (dataElement.optionSet) {\n        const fhirFileName = toPascalCase(dataElement.optionSet.name);\n        const codeSystemFsh = generateFsh(dataElement.optionSet, codeSystemTemplate);\n        const valueSetFsh = generateFsh(dataElement.optionSet, valueSetTemplate);\n        igArchive.file(`input/fsh/codesystems/${fhirFileName}CS.fsh`, codeSystemFsh);\n        igArchive.file(`input/fsh/valuesets/${fhirFileName}VS.fsh`, valueSetFsh);\n      }\n    });\n  });\n};\nconst generateFsh = (data, template) => {\n  const compiledTemplate = Handlebars.compile(template);\n  return compiledTemplate(data);\n};\nconst updateSushiConfigFile = async (igArchive, igConfig) => {\n  const configFile = await igArchive.file(\"sushi-config.yaml\").async(\"string\");\n  let configFileYaml = YAML.parseDocument(configFile);\n  Object.entries(igConfig).forEach(_ref2 => {\n    let [key, value] = _ref2;\n    configFileYaml.set(key, value);\n  });\n  igArchive.file(\"sushi-config.yaml\", configFileYaml.toString());\n};\nconst updateIgIniFile = async (igArchive, igId) => {\n  const igIniFile = await igArchive.file(\"ig.ini\").async(\"string\");\n  igIniFile.replace(\"fhir.example\", igId);\n  const updatedIniFile = igIniFile.replace(\"fhir.example\", igId);\n  igArchive.file(\"ig.ini\", updatedIniFile);\n};","export const handleDownload = async zip => {\n  const blob = await zip.generateAsync({\n    type: 'blob'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'ig.zip';\n  a.click();\n  URL.revokeObjectURL(url);\n};","import React from \"react\";\nimport { Transfer } from \"@dhis2/ui\";\nfunction TrackerProgramSelector(_ref) {\n  let {\n    programs,\n    selectedProgramIds,\n    setSelectedProgramIds\n  } = _ref;\n  const handleSelectionChange = _ref2 => {\n    let {\n      selected\n    } = _ref2;\n    setSelectedProgramIds(Array.isArray(selected) ? selected : []);\n  };\n  const options = programs.map(program => ({\n    value: program.id,\n    label: program.displayName\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Transfer, {\n    label: \"Select Tracker Programs\",\n    selected: selectedProgramIds,\n    onChange: handleSelectionChange,\n    options: options,\n    leftHeader: \"Available Tracker Programs\",\n    rightHeader: \"Selected Tracker Programs\",\n    filterable: true\n  }));\n}\nexport default TrackerProgramSelector;","// extracted by mini-css-extract-plugin\nexport default {\"centerWrapper\":\"IGConfigForm_centerWrapper__IFjq3\",\"container\":\"IGConfigForm_container__aeTBz\",\"gridContainer\":\"IGConfigForm_gridContainer__GCUtD\",\"title\":\"IGConfigForm_title__cnvS9\",\"inputField\":\"IGConfigForm_inputField__mF4XE\",\"button\":\"IGConfigForm_button__bz4FP\",\"errorMessage\":\"IGConfigForm_errorMessage__ECgKL\"};","import React from \"react\";\nimport { ReactFinalForm, SingleSelectFieldFF, InputFieldFF, Button, hasValue, createPattern } from \"@dhis2/ui\";\nimport styles from \"./IGConfigForm.module.css\";\nconst IGConfigForm = _ref => {\n  let {\n    onSubmit\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.centerWrapper\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.title\n  }, \"Implementation Guide Configuration\"), /*#__PURE__*/React.createElement(ReactFinalForm.Form, {\n    onSubmit: onSubmit,\n    initialValues: {\n      id: \"fhir.example\",\n      name: \"Example IG\",\n      canonical: \"http://example.org\",\n      status: \"draft\",\n      version: \"0.1.0\",\n      releaseLabel: \"ci-build\",\n      publisher: {\n        name: \"DHIS2\",\n        url: \"https://dhis2.org\"\n      }\n    }\n  }, _ref2 => {\n    let {\n      handleSubmit\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.gridContainer\n    }, /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"id\",\n      label: \"ID\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"The unique identifier for the IG. Default: fhir.example\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"name\",\n      label: \"Name\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: ExampleIG\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"canonical\",\n      label: \"Canonical\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: http://example.org\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"status\",\n      label: \"Status\",\n      component: SingleSelectFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: draft\",\n      options: [{\n        label: 'draft',\n        value: 'draft'\n      }, {\n        label: 'active',\n        value: 'active'\n      }, {\n        label: 'retired',\n        value: 'retired'\n      }, {\n        label: 'unknown',\n        value: 'unknown'\n      }]\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"version\",\n      label: \"Version\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: 0.1.0\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"releaseLabel\",\n      label: \"Release Label\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: ci-build\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"publisher.name\",\n      label: \"Publisher\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: DHIS2\"\n    }), /*#__PURE__*/React.createElement(ReactFinalForm.Field, {\n      required: true,\n      name: \"publisher.url\",\n      label: \"Publisher URL\",\n      component: InputFieldFF,\n      className: styles.inputField,\n      validate: hasValue,\n      helpText: \"Default: https://dhis2.org\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      large: true\n    }, \"Set Configuration\")));\n  })));\n};\nexport default IGConfigForm;","import { useDataQuery } from \"@dhis2/app-runtime\";\nconst trackerProgramQuery = {\n  programs: {\n    resource: \"programs\",\n    params: {\n      filter: \"programType:eq:WITH_REGISTRATION\",\n      fields: [\"id\", \"displayName\", \"name\", \"description\", \"enrollmentDateLabel\", \"incidentDateLabel\", \"programTrackedEntityAttributes[mandatory,trackedEntityAttribute[name,shortName,formName,displayName,valueType,description,optionSet[name,valueType,options[code,name]]]]\", \"programStages[name,description,repeatable,programStageDataElements[dataElement[name,shortName,formName,displayName,valueType,optionSet[name,options[code,name]]]]]\"]\n    }\n  }\n};\nexport const useTrackerPrograms = () => {\n  var _data$programs$progra, _data$programs;\n  const {\n    data,\n    error,\n    loading\n  } = useDataQuery(trackerProgramQuery);\n  const programs = (_data$programs$progra = data === null || data === void 0 ? void 0 : (_data$programs = data.programs) === null || _data$programs === void 0 ? void 0 : _data$programs.programs) !== null && _data$programs$progra !== void 0 ? _data$programs$progra : [];\n  return {\n    programs,\n    error,\n    loading\n  };\n};","import { useEffect, useState } from 'react';\nexport const templateFileNames = [{\n  key: 'programLogicalModelTemplate',\n  fileName: 'ProgramLogicalModel.fsh.handlebars'\n}, {\n  key: 'programStageLogicalModelTemplate',\n  fileName: 'ProgramStageLogicalModel.fsh.handlebars'\n}, {\n  key: 'codeSystemTemplate',\n  fileName: 'CodeSystem.fsh.handlebars'\n}, {\n  key: 'valueSetTemplate',\n  fileName: 'ValueSet.fsh.handlebars'\n}];\nexport const useTemplates = () => {\n  const [templates, setTemplates] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let isMounted = true;\n    const fetchTemplate = async templateName => {\n      const response = await fetch(`${process.env.PUBLIC_URL}/assets/${templateName}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch template: ${templateName}`);\n      }\n      return await response.text();\n    };\n    const loadTemplates = async () => {\n      try {\n        const loadedTemplates = {};\n        for (const {\n          key,\n          fileName\n        } of templateFileNames) {\n          loadedTemplates[key] = await fetchTemplate(fileName);\n        }\n        if (isMounted) {\n          setTemplates(loadedTemplates);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMounted) {\n          setError(error);\n        }\n      }\n    };\n    loadTemplates();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  return {\n    templates,\n    error\n  };\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__KkHQY\",\"downloadButton\":\"App_downloadButton__1njqx\"};","import React, { useState } from \"react\";\nimport { exportMetadata } from \"./utils/exportMetadata\";\nimport TrackerProgramSelector from \"./components/TrackerProgramSelector\";\nimport IGConfigForm from \"./components/IGConfigForm\";\nimport { useTrackerPrograms } from \"./hooks/useTrackerPrograms\";\nimport { useTemplates } from \"./hooks/useTemplates\";\nimport { NoticeBox, CircularLoader, Button } from \"@dhis2/ui\";\nimport classes from \"./App.module.css\";\nconst MyApp = () => {\n  const [selectedProgramIds, setSelectedProgramIds] = useState([]);\n  const [igConfig, setIgConfig] = useState(null);\n  const {\n    programs,\n    error: programsError,\n    loading\n  } = useTrackerPrograms();\n  const {\n    templates,\n    error: templatesError\n  } = useTemplates();\n  if (programsError || templatesError) {\n    console.error(\"Error: \", programsError || templatesError);\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      title: \"Error\",\n      error: true\n    }, \"There was an error loading data.\");\n  }\n  if (loading || !templates) return /*#__PURE__*/React.createElement(CircularLoader, null);\n  const selectedPrograms = programs.filter(program => selectedProgramIds.includes(program.id));\n  const handleIGConfigSubmit = values => {\n    setIgConfig(values);\n  };\n  if (!igConfig) {\n    return /*#__PURE__*/React.createElement(IGConfigForm, {\n      onSubmit: handleIGConfigSubmit\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(TrackerProgramSelector, {\n    programs: programs,\n    selectedProgramIds: selectedProgramIds,\n    setSelectedProgramIds: setSelectedProgramIds\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.downloadButton\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: () => exportMetadata(selectedPrograms, templates, igConfig),\n    disabled: selectedPrograms.length === 0 || !igConfig || !templates\n  }, \"Download FHIR IG\")));\n};\nexport default MyApp;"],"names":["toPascalCase","str","replace","trim","split","map","word","toUpperCase","charAt","slice","toLowerCase","filter","join","toCamelCase","index","registerHelpers","Handlebars","toKebabCase","dhis2ValueType","isOptionSet","arguments","length","undefined","toFhirDataType","isMandatory","toFhirCardinality","dhis2ProgramAttribute","description","name","repeatable","isRepeatable","dhis2Object","Error","tryNames","formName","displayName","shortName","Boolean","camelCaseName","toFhirDataElementName","exportMetadata","trackerPrograms","templates","igConfig","JSZipUtils","err","templateIg","JSZip","then","igArchive","loadAsync","async","updateSushiConfigFile","updateIgIniFile","id","forEach","program","generateFshFilesForProgram","blob","zip","generateAsync","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownload","programLogicalModelTemplate","programStageLogicalModelTemplate","codeSystemTemplate","valueSetTemplate","programFsh","generateFsh","logicalModelFileName","file","programTrackedEntityAttributes","attribute","attr","trackedEntityAttribute","optionSet","fhirFileName","codeSystemFsh","valueSetFsh","programStages","stage","programStageFsh","programStageDataElements","_ref","dataElement","data","template","compiledTemplate","configFile","configFileYaml","YAML","Object","entries","_ref2","key","value","set","toString","igId","igIniFile","updatedIniFile","programs","selectedProgramIds","setSelectedProgramIds","options","label","React","Transfer","selected","onChange","Array","isArray","leftHeader","rightHeader","filterable","onSubmit","className","styles","ReactFinalForm","initialValues","canonical","status","version","releaseLabel","publisher","handleSubmit","required","component","InputFieldFF","validate","hasValue","helpText","SingleSelectFieldFF","Button","primary","large","trackerProgramQuery","resource","params","fields","templateFileNames","fileName","MyApp","useState","setIgConfig","error","programsError","loading","useTrackerPrograms","_data$programs$progra","_data$programs","useDataQuery","templatesError","useTemplates","setTemplates","setError","useEffect","isMounted","fetchTemplate","response","fetch","templateName","ok","text","loadedTemplates","console","loadTemplates","NoticeBox","title","CircularLoader","selectedPrograms","includes","handleIGConfigSubmit","values","classes","TrackerProgramSelector","onClick","disabled","IGConfigForm"],"sourceRoot":""}